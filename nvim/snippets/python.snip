snippet fun
	def ${1:fun}(${2:param}):
	    """ ${3:@TODO} """
	    ${4:pass}

snippet cfun
	def ${1:fun}(self${2}):
	    """ ${3:@TODO} """
	    ${4:pass}

snippet csfun
	@staticmethod
	def ${1:fun}(${2:param}):
	    """ ${3:@TODO} """
	    ${4:pass}

snippet prop
	@property
	def ${1:prop}(self):
	    """ ${2} """
	    return self.${3:pass}

snippet afun
	async def ${1:afun}(${2:param}):
	    """ ${3:@TODO} """
	    ${4:pass}

snippet cafun
	async def ${1:afun}(self, ${2:param}):
	    """ ${3:@TODO} """
	    ${4:pass}

snippet csafun
	@staticmethod
	async def ${1:afun}(${2:param}):
	    """ ${3:@TODO} """
	    ${4:pass}

snippet class
	class ${1:foo}(${2:object}):
	    """ ${3:@TODO} """
	
	    def __init__(self, ${4:param}):
	        """ ${5:@TODO}"""
	        ${6:pass}

snippet svar
	self.${1:var} = ${2:value}

snippet lambda
	lambda ${1:x}: ${2:pass}

snippet for
	for ${1:i} in ${2:range(10)}:
	    ${3:pass}

snippet while
	while ${1:True}:
	    ${2:pass}

snippet try
	try:
	    ${1:pass}
	
	except ${2:Exception} as ${3:e}:
	    ${4:raise e}

snippet if
	if ${1:cond}:
	    ${2:pass}

snippet if=
	if ${1:a} == ${2:b}:
	    ${3:pass}

snippet if!
	if ${1:a} != ${2:b}:
	    ${3:pass}

snippet ife
	if ${1:cond}:
	    ${2:pass}
	else ${3:cond2}:
	    ${4:pass}

snippet ifn
	if not ${1:cond}:
	    ${2:pass}

snippet ifne
	if not ${1:cond}:
	    ${2:pass}
	else ${3:cond2}:
	    ${4:pass}

snippet elif
	elif ${1:cond}:
	    ${3}

snippet else
	else:
	    ${1}

snippet with
	with ${1}:
	    ${2}

snippet withf
	with open("${1:test.txt}", "${2:r}") as ${3:f}:
	    ${4}

snippet afut
	${1}asyncio.future(${2:fun}(${3}))
snippet modh
	# -*- coding: utf-8 -*-
	"""
	    ${1:package.module}
	    ~~~~~~~~~~~~~~

	    ${2:A brief description goes here.}

	    :copyright: (c) 2018 by Matthias Riegler.
	    :license: ${3:APACHEv2}, see ${4:LICENSE.md} for more details.
	"""
	
	${5}
